import{Monzo}from"./monzo.js";export class XLengthType{static Integer=new XLengthType(126.185950714291,null);static OctaveReduced=new XLengthType(341.902258270291,Monzo.getOctaveFactor);static Shasavic=new XLengthType(341.902258270291,Monzo.getShasavicOctaveFactor);scale;getOctaveFactor;constructor(t,o){this.scale=t||128,this.getOctaveFactor=o||(()=>0)}toStructual(t){let o=this.getOctaveFactor(t);return 0===o?t:Monzo.multiply(t,Monzo.from2Factor(o))}fromStructual(t){let o=this.getOctaveFactor(t);return 0===o?t:Monzo.divide(t,Monzo.from2Factor(o))}}export function parsePitches(t,o,e){const r=t.trim().split(/\s+/),c=[];for(let t of r){let r=!1;t.startsWith("x")&&(r=!0,t=t.substring(1));let n=null;if(t.includes("/")){const[o,e]=t.split("/").map(Number);n=Monzo.fromFraction(o??1,e??1)}else n=Monzo.fromInt(Number(t));let a=n;n=e.toStructual(n),o&&(n.factors.delete(2),a=e.fromStructual(n));const s=c.find(t=>0===Monzo.divide(n,t.monzo).pitchDistance);s?s.mute=r&&s.mute:c.push({mute:r,monzo:n,originalMonzo:a})}return c}